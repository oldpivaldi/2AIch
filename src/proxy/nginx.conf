# user  nobody;
worker_processes 1;

#error_log  logs/error.log;
#error_log  logs/error.log  notice;
#error_log  logs/error.log  info;

#pid        logs/nginx.pid;
events {
	worker_connections 1024;
}

http {
    include mime.types;
	default_type application/octet-stream;
    sendfile on;
    keepalive_timeout 65;

    upstream backend {
        server backend:8000;
    }

    upstream frontend {
        server frontend:5173;
    }

    server {
        # listen 80; TODO: uncomment for ssl
		# server_name localhost;

		# location / {
        #     return 301 https://$host$request_uri;
        # }

        listen 80;

        add_header 'Cache-Control' 'no-cache' always;

        location / {
            proxy_pass http://frontend;
        }

        location /sockjs-node {
            proxy_pass http://frontend;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "Upgrade";
        }

        location /api/ {
            proxy_pass http://backend/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
        }
    }

    # server {
	# 	listen       443 ssl;
	# 	server_name  localhost;
	# 	ssl_certificate      /etc/ssl/fullchain.pem;    # TODO: path/to/ssl
	# 	ssl_certificate_key  /etc/ssl/privkey.pem;      # TODO: path/to/ssl
	# 	ssl_session_cache    shared:SSL:1m;
	# 	ssl_session_timeout  5m;
	# 	ssl_ciphers  HIGH:!aNULL:!MD5;
	# 	ssl_prefer_server_ciphers  on;

	# 	location / {
	# 		root   html;
	# 		index  index.html index.htm;
	# 	}

	# 	location /loaction/ {
    #         allow ip;   # TODO: add ip a
    #         deny all;
    #         proxy_pass http://ip:port/endpoint/;    # TODO: refactor
    #         proxy_set_header Host $host;
    #         proxy_set_header X-Real-IP $remote_addr;
    #         proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    #         proxy_set_header X-Forwarded-Proto $scheme;
    #     }
	# }
}

events {
    worker_connections 1024;
}
